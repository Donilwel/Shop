{
    "swagger": "2.0",
    "info": {
        "description": "API для магазина с авторизацией, покупками и админ-панелью",
        "title": "Shop API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/api/admin/merch/new": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет добавить новый мерч или изменить цену существующего мерча. Проверяет корректность данных и наличие мерча.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Добавление или изменение цены мерча",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Тело запроса",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.MerchInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Мерч успешно добавлен или цена обновлена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса, неверный тип или цена мерча",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Мерч с таким именем уже существует",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка добавления нового мерча или обновления цены",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет перевести монеты работнику по его никнейму, проверяя корректность данных и существование получателя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Перевод монет работнику",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Тело запроса",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SendMoney"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Перевод монет успешен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса или неверное количество монет",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найден работник или кошелек получателя",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка обновления баланса получателя или фиксации транзакции",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/auth": {
            "post": {
                "description": "Авторизует пользователя по email и паролю, создавая учетную запись автоматически, если пользователя нет в базе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает JWT-токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "201": {
                        "description": "Пользователь создан автоматически",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверный пароль",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "408": {
                        "description": "Запрос отменен клиентом",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Отзывает текущий токен авторизации и добавляет его в список отозванных токенов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Выход из системы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Выход выполнен успешно",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Отсутствует токен авторизации / Некорректный формат токена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось отозвать токен",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/buy/{item}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет пользователю купить товар, указав его имя. Проверяется наличие средств на кошельке и успешность покупки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Покупка товара пользователем",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"item_name\"",
                        "description": "Название товара",
                        "name": "item",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о балансе и купленном товаре",
                        "schema": {
                            "$ref": "#/definitions/handlers.InfoAfterBying"
                        }
                    },
                    "400": {
                        "description": "Недостаточно средств на кошельке",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Покупатель или товар не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сохранения в базе данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает информацию о кошельке, инвентаре и истории транзакций для конкретного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Получение информации о кошельке, инвентаре и транзакциях пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о кошельке и транзакциях",
                        "schema": {
                            "$ref": "#/definitions/handlers.InfoMain"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найден пользователь или его данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере при получении данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/merch": {
            "get": {
                "description": "Возвращает список товаров из базы данных или кэша Redis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Получение списка мерча",
                "responses": {
                    "200": {
                        "description": "Список мерча",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Merch"
                            }
                        }
                    },
                    "404": {
                        "description": "Мерч не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при поиске мерча",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/ping": {
            "get": {
                "description": "Возвращает \"pong\", если сервер работает корректно",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Проверка работоспособности сервера",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка написания pong. Ошибка подключения",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sendCoin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет пользователю отправить монеты другому пользователю, указав его имя и количество монет для отправки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Отправка монет от одного пользователя другому",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Тело запроса",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionsResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Транзакция успешно создана",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос - некорректный ввод, недостаточно монет или попытка отправки себе",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найдено - пользователь или кошелек не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера - проблемы с транзакцией в базе данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Возвращает список сотрудников с их ID, именем пользователя и email из базы данных или кэша Redis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Получение списка сотрудников",
                "responses": {
                    "200": {
                        "description": "Список сотрудников",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Сотрудники не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "408": {
                        "description": "Запрос отменен клиентом",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при поиске сотрудников",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthRequest": {
            "description": "Структура для входа пользователя",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "securepassword"
                }
            }
        },
        "handlers.InfoAfterBying": {
            "type": "object",
            "properties": {
                "balance": {},
                "item": {},
                "nickname": {}
            }
        },
        "handlers.InfoMain": {
            "type": "object",
            "properties": {
                "coinHistory": {
                    "type": "object",
                    "properties": {
                        "received": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "integer"
                                    },
                                    "fromUser": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "sent": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "integer"
                                    },
                                    "toUser": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "coins": {
                    "type": "integer"
                },
                "inventory": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "quantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "handlers.MerchInfo": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.SendMoney": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "toUser": {
                    "type": "string"
                }
            }
        },
        "handlers.TransactionsResponse": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "toUser": {
                    "type": "string"
                }
            }
        },
        "models.Merch": {
            "description": "Структура сделки",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "models.Transaction": {
            "description": "Структура транзакции",
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "fromUser": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "toUser": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "description": "Структура user",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}